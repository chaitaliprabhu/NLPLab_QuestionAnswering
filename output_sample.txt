100%|██████████| 77/77 [00:12<00:00,  6.04it/s]
{'ner': 107.29432135582029}
100%|██████████| 77/77 [00:12<00:00,  6.25it/s]
{'ner': 91.45171165218804}
100%|██████████| 77/77 [00:12<00:00,  6.21it/s]
{'ner': 82.21405513464137}
100%|██████████| 77/77 [00:12<00:00,  6.07it/s]
{'ner': 71.94761077035622}
100%|██████████| 77/77 [00:12<00:00,  5.63it/s]
{'ner': 74.47471105323278}
100%|██████████| 77/77 [00:14<00:00,  4.77it/s]
{'ner': 64.51285268971284}
100%|██████████| 77/77 [00:15<00:00,  4.94it/s]
{'ner': 69.87342784649823}
100%|██████████| 77/77 [00:17<00:00,  4.37it/s]
{'ner': 43.572163226350426}
100%|██████████| 77/77 [00:17<00:00,  4.09it/s]
{'ner': 50.08298172264164}
100%|██████████| 77/77 [00:19<00:00,  3.75it/s]
{'ner': 59.960589656054445}
100%|██████████| 77/77 [00:20<00:00,  3.58it/s]
{'ner': 54.44152707005166}
100%|██████████| 77/77 [00:21<00:00,  3.48it/s]
{'ner': 52.29879404559719}
100%|██████████| 77/77 [00:21<00:00,  3.52it/s]
{'ner': 40.9631540845958}
100%|██████████| 77/77 [00:20<00:00,  3.65it/s]
{'ner': 36.91642300060833}
100%|██████████| 77/77 [00:20<00:00,  3.78it/s]
{'ner': 20.57473022046607}
100%|██████████| 77/77 [00:20<00:00,  3.66it/s]
{'ner': 24.894136044616598}
100%|██████████| 77/77 [00:21<00:00,  3.55it/s]
{'ner': 38.141559625715914}
100%|██████████| 77/77 [00:24<00:00,  2.97it/s]
{'ner': 25.896584960062267}
100%|██████████| 77/77 [00:28<00:00,  2.46it/s]
{'ner': 21.378255627141275}
100%|██████████| 77/77 [00:31<00:00,  2.26it/s]
{'ner': 20.49121866828706}
100%|██████████| 77/77 [00:35<00:00,  2.07it/s]
{'ner': 23.386784295600794}
100%|██████████| 77/77 [00:37<00:00,  2.04it/s]
{'ner': 34.57193170425671}
100%|██████████| 77/77 [00:40<00:00,  1.88it/s]
{'ner': 24.081749472053836}
100%|██████████| 77/77 [00:43<00:00,  1.63it/s]
{'ner': 22.882707235950345}
100%|██████████| 77/77 [00:42<00:00,  1.80it/s]
{'ner': 20.990789375455872}
100%|██████████| 77/77 [00:44<00:00,  1.71it/s]
{'ner': 11.970882268108697}
100%|██████████| 77/77 [00:43<00:00,  1.89it/s]
{'ner': 14.820440125367519}
100%|██████████| 77/77 [00:42<00:00,  1.90it/s]
{'ner': 17.97070943051128}
100%|██████████| 77/77 [00:43<00:00,  1.72it/s]
{'ner': 12.766135918430393}
100%|██████████| 77/77 [00:43<00:00,  1.81it/s]
{'ner': 9.058524791039993}
100%|██████████| 77/77 [00:43<00:00,  1.75it/s]
{'ner': 9.51017471684553}
100%|██████████| 77/77 [00:44<00:00,  1.74it/s]
{'ner': 11.315703745614535}
100%|██████████| 77/77 [00:44<00:00,  1.67it/s]
{'ner': 7.704192572346897}
100%|██████████| 77/77 [00:42<00:00,  1.85it/s]
{'ner': 21.527339177542814}
100%|██████████| 77/77 [00:43<00:00,  1.72it/s]
{'ner': 6.662592555696028}
100%|██████████| 77/77 [00:42<00:00,  1.83it/s]
{'ner': 12.089867721447574}
100%|██████████| 77/77 [00:42<00:00,  1.77it/s]
{'ner': 18.528851289134632}
100%|██████████| 77/77 [00:42<00:00,  1.71it/s]
{'ner': 26.05668226840808}
100%|██████████| 77/77 [00:44<00:00,  1.66it/s]
{'ner': 9.0587639432806}
100%|██████████| 77/77 [00:44<00:00,  2.03it/s]
{'ner': 13.81643168026356}
100%|██████████| 77/77 [00:42<00:00,  1.71it/s]
{'ner': 16.53337922139585}
100%|██████████| 77/77 [00:44<00:00,  1.75it/s]
{'ner': 14.710407974707772}
100%|██████████| 77/77 [00:43<00:00,  1.69it/s]
{'ner': 18.085877295764107}
100%|██████████| 77/77 [00:43<00:00,  1.81it/s]
{'ner': 20.2604214141005}
100%|██████████| 77/77 [00:43<00:00,  1.68it/s]
{'ner': 19.275327599004036}
100%|██████████| 77/77 [00:43<00:00,  1.69it/s]
{'ner': 14.719623689615672}
100%|██████████| 77/77 [00:43<00:00,  1.66it/s]
{'ner': 12.301997425758602}
100%|██████████| 77/77 [00:42<00:00,  1.79it/s]
{'ner': 23.723707898924165}
100%|██████████| 77/77 [00:44<00:00,  1.37it/s]
{'ner': 7.019541793036544}
100%|██████████| 77/77 [00:44<00:00,  1.69it/s]
{'ner': 14.438933187303627}
100%|██████████| 77/77 [00:44<00:00,  1.82it/s]
{'ner': 4.128155747423732}
100%|██████████| 77/77 [00:43<00:00,  1.71it/s]
{'ner': 11.239139644289795}
100%|██████████| 77/77 [00:43<00:00,  2.06it/s]
{'ner': 11.093024770885695}
100%|██████████| 77/77 [00:43<00:00,  1.71it/s]
{'ner': 7.122234978689314}
100%|██████████| 77/77 [00:44<00:00,  1.72it/s]
{'ner': 2.8789762760429776}
100%|██████████| 77/77 [00:43<00:00,  1.77it/s]
{'ner': 9.602797082957858}
100%|██████████| 77/77 [00:44<00:00,  1.74it/s]
{'ner': 8.594137182401207}
100%|██████████| 77/77 [00:43<00:00,  1.69it/s]
{'ner': 10.62539456856843}
100%|██████████| 77/77 [00:45<00:00,  1.72it/s]
{'ner': 2.093600321788519}
100%|██████████| 77/77 [00:43<00:00,  1.80it/s]
{'ner': 12.661249409900403}
100%|██████████| 77/77 [00:43<00:00,  1.90it/s]
{'ner': 15.176948267074023}
100%|██████████| 77/77 [00:43<00:00,  1.81it/s]
{'ner': 11.92229911488974}
100%|██████████| 77/77 [00:45<00:00,  1.45it/s]
{'ner': 8.346678109926865}
100%|██████████| 77/77 [00:43<00:00,  1.73it/s]
{'ner': 21.70700363383327}
100%|██████████| 77/77 [00:42<00:00,  1.72it/s]
{'ner': 15.52089330344449}
100%|██████████| 77/77 [00:44<00:00,  1.87it/s]
{'ner': 24.166769299267724}
100%|██████████| 77/77 [00:44<00:00,  1.78it/s]
{'ner': 4.856865991514821}
100%|██████████| 77/77 [00:43<00:00,  1.82it/s]
{'ner': 7.687964463054906}
100%|██████████| 77/77 [00:43<00:00,  1.73it/s]
{'ner': 6.035094434811831}
100%|██████████| 77/77 [00:42<00:00,  1.78it/s]
{'ner': 16.13442956199767}
100%|██████████| 77/77 [00:44<00:00,  1.72it/s]
{'ner': 7.09129813967299}
100%|██████████| 77/77 [00:43<00:00,  1.67it/s]
{'ner': 16.805349351938276}
100%|██████████| 77/77 [00:43<00:00,  1.77it/s]
{'ner': 7.054245217821338}
100%|██████████| 77/77 [00:43<00:00,  1.72it/s]
{'ner': 11.135126897902738}
100%|██████████| 77/77 [00:44<00:00,  1.60it/s]
{'ner': 11.391519076120163}
100%|██████████| 77/77 [00:45<00:00,  1.72it/s]
{'ner': 10.015428141241543}
100%|██████████| 77/77 [00:44<00:00,  1.75it/s]
{'ner': 11.368917246331755}
100%|██████████| 77/77 [00:44<00:00,  1.74it/s]
{'ner': 11.272680965607183}
100%|██████████| 77/77 [00:44<00:00,  1.82it/s]
{'ner': 14.393379193413637}
100%|██████████| 77/77 [00:44<00:00,  1.68it/s]
{'ner': 5.262547621935719}
100%|██████████| 77/77 [00:44<00:00,  1.67it/s]
{'ner': 8.523124181841823}
100%|██████████| 77/77 [00:45<00:00,  1.90it/s]
{'ner': 5.050497649301984}
100%|██████████| 77/77 [00:44<00:00,  1.89it/s]
{'ner': 4.06263212176454}
100%|██████████| 77/77 [00:41<00:00,  1.85it/s]
{'ner': 7.8009067057373045}
100%|██████████| 77/77 [00:40<00:00,  1.87it/s]
{'ner': 4.571370544159358}
100%|██████████| 77/77 [00:40<00:00,  1.82it/s]
{'ner': 16.204027376680127}
100%|██████████| 77/77 [00:46<00:00,  1.68it/s]
{'ner': 17.836408051417113}
100%|██████████| 77/77 [00:43<00:00,  1.77it/s]
{'ner': 19.8806506500853}
100%|██████████| 77/77 [00:44<00:00,  1.69it/s]
{'ner': 4.00102466753937}
100%|██████████| 77/77 [00:44<00:00,  1.71it/s]
{'ner': 1.7722460569732679}
100%|██████████| 77/77 [00:45<00:00,  1.68it/s]
{'ner': 0.00035147689163985026}
100%|██████████| 77/77 [00:44<00:00,  1.73it/s]
{'ner': 5.627886806160928}
100%|██████████| 77/77 [00:43<00:00,  1.82it/s]
{'ner': 14.126932206842827}
100%|██████████| 77/77 [00:43<00:00,  1.68it/s]
{'ner': 14.824262423641313}
Entities Train [('columbus', 'Place')]
Tokens Train [('what', '', 2), ("'s", '', 2), ('there', '', 2), ('to', '', 2), ('see', '', 2), ('in', '', 2), ('columbus', 'Place', 3)]
Entities Train [('john duffey', 'Person')]
Tokens Train [('what', '', 2), ('kind', '', 2), ('of', '', 2), ('music', '', 2), ('does', '', 2), ('john', 'Person', 3), ('duffey', 'Person', 1), ('play', '', 2)]
Entities Train [('rough house rosie', 'Film')]
Tokens Train [('who', '', 2), ('produced', '', 2), ('the', '', 2), ('film', '', 2), ('rough', 'Film', 3), ('house', 'Film', 1), ('rosie', 'Film', 1)]
Entities Train [('fort washington', 'Place')]
Tokens Train [('what', '', 2), ('is', '', 2), ('located', '', 2), ('in', '', 2), ('fort', 'Place', 3), ('washington', 'Place', 1)]
Entities Train [('post punk', 'University')]
Tokens Train [('name', '', 2), ('a', '', 2), ('post', 'University', 3), ('punk', 'University', 1), ('artist', '', 2)]
Entities Train [('mera shikar', 'Film')]
Tokens Train [('what', '', 2), ('is', '', 2), ('the', '', 2), ('language', '', 2), ('in', '', 2), ('which', '', 2), ('mera', 'Film', 3), ('shikar', 'Film', 1), ('was', '', 2), ('filmed', '', 2), ('in', '', 2)]
Entities Train [('national film board of canada', 'Agent')]
Tokens Train [('what', '', 2), ('is', '', 2), ('a', '', 2), ('film', '', 2), ('produced', '', 2), ('by', '', 2), ('the', '', 2), ('national', 'Agent', 3), ('film', 'Agent', 1), ('board', 'Agent', 1), ('of', 'Agent', 1), ('canada', 'Agent', 1)]
Entities Train [('mldonkey', 'Software')]
Tokens Train [('what', '', 2), ('kinds', '', 2), ('of', '', 2), ('software', '', 2), ('is', '', 2), ('mldonkey', 'Software', 3)]
Entities Train [('high school', 'School')]
Tokens Train [('what', '', 2), ('is', '', 2), ('a', '', 2), ('school', '', 2), ('under', '', 2), ('the', '', 2), ('high', 'School', 3), ('school', 'School', 1), ('category', '', 2)]
Entities Train []
Tokens Train [('who', '', 2), ('is', '', 2), ('the', '', 2), ('manufacturer', '', 2), ('of', '', 2), ('sikorsky', '', 2), ('hh', '', 2), ('60', '', 2), ('jayhawk', '', 2)]
Entities Train [('aventurine sa', 'Company')]
Tokens Train [('what', '', 2), ('industry', '', 2), ('does', '', 2), ('aventurine', 'Company', 3), ('sa', 'Company', 1), ('participate', '', 2), ('in', '', 2)]
Entities Train [('eugênio sales', 'Person')]
Tokens Train [('what', '', 2), ('gender', '', 2), ('does', '', 2), ('eugênio', 'Person', 3), ('sales', 'Person', 1), ('identify', '', 2), ('as', '', 2)]
Entities Train [('appalachian mountains', 'Place')]
Tokens Train [('what', '', 2), ('is', '', 2), ('a', '', 2), ('mountain', '', 2), ('in', '', 2), ('the', '', 2), ('appalachian', 'Place', 3), ('mountains', 'Place', 1)]
Entities Train [('starter wife', 'Place')]
Tokens Train [('what', '', 2), ('television', '', 2), ('genre', '', 2), ('is', '', 2), ('the', '', 2), ('starter', 'Place', 3), ('wife', 'Place', 1)]
Entities Train [('san juan national forest', 'Place')]
Tokens Train [('what', '', 2), ('type', '', 2), ('of', '', 2), ('reserve', '', 2), ('is', '', 2), ('the', '', 2), ('san', 'Place', 3), ('juan', 'Place', 1), ('national', 'Place', 1), ('forest', 'Place', 1)]
Entities Train [('joseph meyer', 'Person')]
Tokens Train [('what', '', 2), ('is', '', 2), ('joseph', 'Person', 3), ('meyer', 'Person', 1), ("'s", '', 2), ('job', '', 2)]
Entities Train [('hungary', 'Place')]
Tokens Train [('what', '', 2), ('s', '', 2), ('a', '', 2), ('city', '', 2), ('in', '', 2), ('hungary', 'Place', 3)]
Entities Train [('mike twellman', 'Person')]
Tokens Train [('what', '', 2), ('is', '', 2), ('the', '', 2), ('position', '', 2), ('that', '', 2), ('mike', 'Person', 3), ('twellman', 'Person', 1), ('plays', '', 2)]
Entities Train [('salempur', 'Place')]
Tokens Train [('what', '', 2), ('district', '', 2), ('is', '', 2), ('salempur', 'Place', 3), ('uttar', '', 2), ('pradesh', '', 2), ('in', '', 2)]
Entities Train [('get damned', 'Album')]
Tokens Train [('what', '', 2), ('genre', '', 2), ('of', '', 2), ('music', '', 2), ('is', '', 2), ('on', '', 2), ('the', '', 2), ('album', '', 2), ('get', 'Album', 3), ('damned', 'Album', 1)]
Entities Train [('golden age an', 'Automobile')]
Tokens Train [('is', '', 2), ('the', '', 2), ('golden', 'Automobile', 3), ('age', 'Automobile', 1), ('an', 'Automobile', 1), ('album', '', 2), ('or', '', 2), ('dvd', '', 2)]
Entities Train [('warner bros', 'Company')]
Tokens Train [('what', '', 2), ('movie', '', 2), ('is', '', 2), ('produced', '', 2), ('by', '', 2), ('warner', 'Company', 3), ('bros', 'Company', 1)]
Entities Train [('rudi ball', 'Person')]
Tokens Train [('where', '', 2), ('in', '', 2), ('germany', '', 2), ('was', '', 2), ('rudi', 'Person', 3), ('ball', 'Person', 1), ('born', '', 2), ('in', '', 2)]
Entities Train []
Tokens Train [('what', '', 2), ('time', '', 2), ('zone', '', 2), ('is', '', 2), ('marrakech', '', 2), ('in', '', 2)]
Entities Train [('estella warren', 'Person')]
Tokens Train [('what', '', 2), ('is', '', 2), ('the', '', 2), ('nationality', '', 2), ('of', '', 2), ('estella', 'Person', 3), ('warren', 'Person', 1)]
Entities Train [('tomadino language', 'Language')]
Tokens Train [('what', '', 2), ('country', '', 2), ('utilizes', '', 2), ('the', '', 2), ('tomadino', 'Language', 3), ('language', 'Language', 1)]
Entities Train [('imam mustafayev', 'Person')]
Tokens Train [('what', '', 2), ('is', '', 2), ('imam', 'Person', 3), ('mustafayev', 'Person', 1), ("'s", '', 2), ('gender', '', 2)]
Entities Train [('john berry', 'Person')]
Tokens Train [('which', '', 2), ('country', '', 2), ('is', '', 2), ('john', 'Person', 3), ('berry', 'Person', 1), ('from', '', 2)]
Entities Train [('bodish languages', 'Language')]
Tokens Train [('what', '', 2), ('language', '', 2), ('comes', '', 2), ('from', '', 2), ('bodish', 'Language', 3), ('languages', 'Language', 1)]
Entities Train [('jean genet', 'Person')]
Tokens Train [('who', '', 2), ('did', '', 2), ('jean', 'Person', 3), ('genet', 'Person', 1), ('influence', '', 2)]
Entities Train [('harry blackstone', 'GEN'), ('come from', 'Person')]
Tokens Train [('which', '', 2), ('country', '', 2), ('does', '', 2), ('harry', 'GEN', 3), ('blackstone', 'GEN', 1), ('jr', '', 2), ('come', 'Person', 3), ('from', 'Person', 1)]
Entities Train [('brandon reilly', 'GEN')]
Tokens Train [('what', '', 2), ('musical', '', 2), ('genre', '', 2), ('does', '', 2), ('brandon', 'GEN', 3), ('reilly', 'GEN', 1), ('create', '', 2)]
Entities Train [('great patriotic war', 'Automobile')]
Tokens Train [('which', '', 2), ('red', '', 2), ('army', '', 2), ('general', '', 2), ('was', '', 2), ('involved', '', 2), ('in', '', 2), ('the', '', 2), ('great', 'Automobile', 3), ('patriotic', 'Automobile', 1), ('war', 'Automobile', 1)]
Entities Train [('gangs of new york', 'Film')]
Tokens Train [('who', '', 2), ('wrote', '', 2), ('the', '', 2), ('music', '', 2), ('for', '', 2), ('gangs', 'Film', 3), ('of', 'Film', 1), ('new', 'Film', 1), ('york', 'Film', 1)]
Entities Train [('home', 'Place')]
Tokens Train [('what', '', 2), ('kind', '', 2), ('of', '', 2), ('book', '', 2), ('is', '', 2), ('home', 'Place', 3)]
Entities Train [('ellen swallow richards', 'Person')]
Tokens Train [('what', '', 2), ('is', '', 2), ('ellen', 'Person', 3), ('swallow', 'Person', 1), ('richards', 'Person', 1), ("'s", '', 2), ('nationality', '', 2)]
Entities Train [('episode written', 'Person'), ('michelle ashford', 'Person')]
Tokens Train [('what', '', 2), ('is', '', 2), ('an', '', 2), ('episode', 'Person', 3), ('written', 'Person', 1), ('by', '', 2), ('michelle', 'Person', 3), ('ashford', 'Person', 1)]
Entities Train [('lorenzo maitani', 'Person')]
Tokens Train [('what', '', 2), ('is', '', 2), ('the', '', 2), ('nationality', '', 2), ('of', '', 2), ('lorenzo', 'Person', 3), ('maitani', 'Person', 1)]
Entities Train [('chicago', 'Place')]
Tokens Train [('name', '', 2), ('a', '', 2), ('person', '', 2), ('born', '', 2), ('in', '', 2), ('chicago', 'Place', 3)]
Entities Train [('fall heads roll', 'Album')]
Tokens Train [('what', '', 2), ('type', '', 2), ('of', '', 2), ('music', '', 2), ('fall', 'Album', 3), ('heads', 'Album', 1), ('roll', 'Album', 1)]
Entities Train [('sophie merry', 'Person')]
Tokens Train [('what', '', 2), ('is', '', 2), ('the', '', 2), ('gender', '', 2), ('of', '', 2), ('sophie', 'Person', 3), ('merry', 'Person', 1)]
Entities Train [('central european time', 'SportsEvent')]
Tokens Train [('what', '', 2), ("'s", '', 2), ('a', '', 2), ('place', '', 2), ('in', '', 2), ('central', 'SportsEvent', 3), ('european', 'SportsEvent', 1), ('time', 'SportsEvent', 1), ('zone', '', 2)]
Entities Train [('ryna', 'Agent')]
Tokens Train [('which', '', 2), ('city', '', 2), ('did', '', 2), ('the', '', 2), ('artist', '', 2), ('ryna', 'Agent', 3), ('originate', '', 2), ('in', '', 2)]
Entities Train [('generation kill', 'Person')]
Tokens Train [('what', '', 2), ('type', '', 2), ('of', '', 2), ('film', '', 2), ('is', '', 2), ('generation', 'Person', 3), ('kill', 'Person', 1)]
Entities Train [('hyundai santa fe', 'Automobile')]
Tokens Train [('in', '', 2), ('what', '', 2), ('automotive', '', 2), ('class', '', 2), ('is', '', 2), ('the', '', 2), ('hyundai', 'Automobile', 3), ('santa', 'Automobile', 1), ('fe', 'Automobile', 1)]
Entities Train [('action film', 'MusicGenre')]
Tokens Train [('name', '', 2), ('a', '', 2), ('japanese', '', 2), ('action', 'MusicGenre', 3), ('film', 'MusicGenre', 1)]
Entities Train [('moderat', 'Agent')]
Tokens Train [('what', '', 2), ('is', '', 2), ('moderat', 'Agent', 3), ("'s", '', 2), ('origin', '', 2)]
Entities Train [('detroit', 'Place')]
Tokens Train [('who', '', 2), ('is', '', 2), ('a', '', 2), ('musician', '', 2), ('born', '', 2), ('in', '', 2), ('detroit', 'Place', 3)]
Entities Train [('louis n', 'Person')]
Tokens Train [('what', '', 2), ('film', '', 2), ('story', '', 2), ('credits', '', 2), ('did', '', 2), ('louis', 'Person', 3), ('n', 'Person', 1), ('parker', '', 2), ('contribute', '', 2), ('to', '', 2)]
Entities Train [('endless love', 'Language')]
Tokens Train [('who', '', 2), ('was', '', 2), ('the', '', 2), ('cinematographer', '', 2), ('for', '', 2), ('the', '', 2), ('film', '', 2), ('endless', 'Language', 3), ('love', 'Language', 1)]
Entities Train [('private university', 'University')]
Tokens Train [('what', '', 2), ('is', '', 2), ('an', '', 2), ('example', '', 2), ('of', '', 2), ('a', '', 2), ('private', 'University', 3), ('university', 'University', 1)]
Entities Train [('italy', 'Person')]
Tokens Train [('name', '', 2), ('a', '', 2), ('location', '', 2), ('in', '', 2), ('italy', 'Person', 3)]
Entities Train [('laura ingalls wilder', 'Person')]
Tokens Train [('what', '', 2), ('is', '', 2), ('a', '', 2), ('book', '', 2), ('by', '', 2), ('laura', 'Person', 3), ('ingalls', 'Person', 1), ('wilder', 'Person', 1)]
Entities Train [('jane austen', 'Person')]
Tokens Train [('what', '', 2), ('did', '', 2), ('jane', 'Person', 3), ('austen', 'Person', 1), ('write', '', 2)]
Entities Train [('vitas', 'Person')]
Tokens Train [('where', '', 2), ('is', '', 2), ('the', '', 2), ('artist', '', 2), ('vitas', 'Person', 3), ('from', '', 2)]
Entities Train [('destroy the machines', 'Album')]
Tokens Train [('in', '', 2), ('what', '', 2), ('format', '', 2), ('was', '', 2), ('destroy', 'Album', 3), ('the', 'Album', 1), ('machines', 'Album', 1), ('released', '', 2)]
Entities Train [('james g', 'Person')]
Tokens Train [('what', '', 2), ('is', '', 2), ('james', 'Person', 3), ('g', 'Person', 1), ('blaine', '', 2), ('most', '', 2), ('known', '', 2), ('for', '', 2)]
Entities Train [('the dog island', 'Software')]
Tokens Train [('what', '', 2), ('kind', '', 2), ('of', '', 2), ('video', '', 2), ('game', '', 2), ('is', '', 2), ('the', 'Software', 3), ('dog', 'Software', 1), ('island', 'Software', 1)]
Entities Train []
Tokens Train [('what', '', 2), ('tracks', '', 2), ('are', '', 2), ('by', '', 2), ('slinkeeminx', '', 2)]
Entities Train [('don', 'Place')]
Tokens Train [('what', '', 2), ('is', '', 2), ('don', 'Place', 3), ('graham', '', 2), ('known', '', 2), ('as', '', 2)]
Entities Train [('voice actor', 'Person')]
Tokens Train [('who', '', 2), ('was', '', 2), ('a', '', 2), ('voice', 'Person', 3), ('actor', 'Person', 1)]
Entities Train [('liliana cavani', 'Person')]
Tokens Train [('what', '', 2), ('movie', '', 2), ('did', '', 2), ('liliana', 'Person', 3), ('cavani', 'Person', 1), ('direct', '', 2)]
Entities Train [('cheney tech', 'Automobile')]
Tokens Train [('which', '', 2), ('country', '', 2), ('is', '', 2), ('cheney', 'Automobile', 3), ('tech', 'Automobile', 1), ('in', '', 2)]
Entities Train [('nepal', 'Place')]
Tokens Train [('name', '', 2), ('a', '', 2), ('city', '', 2), ('in', '', 2), ('nepal', 'Place', 3)]
Entities Train [('chicago', 'Place')]
Tokens Train [('what', '', 2), ('s', '', 2), ('the', '', 2), ('name', '', 2), ('of', '', 2), ('a', '', 2), ('battle', '', 2), ('that', '', 2), ('happened', '', 2), ('in', '', 2), ('chicago', 'Place', 3)]
Entities Train [('communist party of britain', 'Agent')]
Tokens Train [('which', '', 2), ('is', '', 2), ('the', '', 2), ('main', '', 2), ('ideology', '', 2), ('of', '', 2), ('the', '', 2), ('communist', 'Agent', 3), ('party', 'Agent', 1), ('of', 'Agent', 1), ('britain', 'Agent', 1)]
Entities Train []
Tokens Train [('what', '', 2), ('s', '', 2), ('the', '', 2), ('name', '', 2), ('of', '', 2), ('a', '', 2), ('heavy', '', 2), ('metal', '', 2), ('artist', '', 2)]
Entities Train [('webbie', 'Person')]
Tokens Train [('which', '', 2), ('recording', '', 2), ('label', '', 2), ('is', '', 2), ('webbie', 'Person', 3), ('with', '', 2)]
Entities Train [('thunderbolt and lightfoot', 'Film')]
Tokens Train [('who', '', 2), ('wrote', '', 2), ('the', '', 2), ('film', '', 2), ('thunderbolt', 'Film', 3), ('and', 'Film', 1), ('lightfoot', 'Film', 1)]
Entities Train []
Tokens Train [('who', '', 2), ('is', '', 2), ('an', '', 2), ('artist', '', 2), ('known', '', 2), ('for', '', 2), ('alternative', '', 2), ('hip', '', 2), ('hop', '', 2)]
Entities Train [('england', 'MusicalArtist')]
Tokens Train [('what', '', 2), ('is', '', 2), ('a', '', 2), ('name', '', 2), ('of', '', 2), ('gay', '', 2), ('night', '', 2), ('club', '', 2), ('in', '', 2), ('england', 'MusicalArtist', 3)]
Entities Train [('robert roth', 'Person')]
Tokens Train [('what', '', 2), ('type', '', 2), ('of', '', 2), ('music', '', 2), ('is', '', 2), ('robert', 'Person', 3), ('roth', 'Person', 1), ('known', '', 2), ('for', '', 2)]
Entities Train [('folk music', 'Genre')]
Tokens Train [('what', '', 2), ('album', '', 2), ('has', '', 2), ('folk', 'Genre', 3), ('music', 'Genre', 1)]
Entities Train []
Tokens Train [('what', '', 2), ('kind', '', 2), ('of', '', 2), ('tv', '', 2), ('show', '', 2), ('is', '', 2), ('frontpage', '', 2)]
Entities Train [('serge gainsbourg', 'Person')]
Tokens Train [('name', '', 2), ('an', '', 2), ('album', '', 2), ('by', '', 2), ('serge', 'Person', 3), ('gainsbourg', 'Person', 1)]
Entities Train [('james hendry', 'Person')]
Tokens Train [('what', '', 2), ('is', '', 2), ('the', '', 2), ('gender', '', 2), ('of', '', 2), ('james', 'Person', 3), ('hendry', 'Person', 1)]
Entities Train [('darren dods', 'Person')]
Tokens Train [('what', '', 2), ('is', '', 2), ('darren', 'Person', 3), ('dods', 'Person', 1), ('known', '', 2), ('for', '', 2), ('doing', '', 2), ('for', '', 2), ('a', '', 2), ('profession', '', 2)]
Saved model to D:\New folder\NLP\outputModel
Loading from D:\New folder\NLP\outputModel
Entities Test [('columbus', 'Place')]
Tokens Test [('what', '', 2), ("'s", '', 2), ('there', '', 2), ('to', '', 2), ('see', '', 2), ('in', '', 2), ('columbus', 'Place', 3)]
Entities Test [('john duffey', 'Person')]
Tokens Test [('what', '', 2), ('kind', '', 2), ('of', '', 2), ('music', '', 2), ('does', '', 2), ('john', 'Person', 3), ('duffey', 'Person', 1), ('play', '', 2)]
Entities Test [('rough house rosie', 'Film')]
Tokens Test [('who', '', 2), ('produced', '', 2), ('the', '', 2), ('film', '', 2), ('rough', 'Film', 3), ('house', 'Film', 1), ('rosie', 'Film', 1)]
Entities Test [('fort washington', 'Place')]
Tokens Test [('what', '', 2), ('is', '', 2), ('located', '', 2), ('in', '', 2), ('fort', 'Place', 3), ('washington', 'Place', 1)]
Entities Test [('post punk', 'University')]
Tokens Test [('name', '', 2), ('a', '', 2), ('post', 'University', 3), ('punk', 'University', 1), ('artist', '', 2)]
Entities Test [('mera shikar', 'Film')]
Tokens Test [('what', '', 2), ('is', '', 2), ('the', '', 2), ('language', '', 2), ('in', '', 2), ('which', '', 2), ('mera', 'Film', 3), ('shikar', 'Film', 1), ('was', '', 2), ('filmed', '', 2), ('in', '', 2)]
Entities Test [('national film board of canada', 'Agent')]
Tokens Test [('what', '', 2), ('is', '', 2), ('a', '', 2), ('film', '', 2), ('produced', '', 2), ('by', '', 2), ('the', '', 2), ('national', 'Agent', 3), ('film', 'Agent', 1), ('board', 'Agent', 1), ('of', 'Agent', 1), ('canada', 'Agent', 1)]
Entities Test [('mldonkey', 'Software')]
Tokens Test [('what', '', 2), ('kinds', '', 2), ('of', '', 2), ('software', '', 2), ('is', '', 2), ('mldonkey', 'Software', 3)]
Entities Test [('high school', 'School')]
Tokens Test [('what', '', 2), ('is', '', 2), ('a', '', 2), ('school', '', 2), ('under', '', 2), ('the', '', 2), ('high', 'School', 3), ('school', 'School', 1), ('category', '', 2)]
Entities Test []
Tokens Test [('who', '', 2), ('is', '', 2), ('the', '', 2), ('manufacturer', '', 2), ('of', '', 2), ('sikorsky', '', 2), ('hh', '', 2), ('60', '', 2), ('jayhawk', '', 2)]
Entities Test [('aventurine sa', 'Company')]
Tokens Test [('what', '', 2), ('industry', '', 2), ('does', '', 2), ('aventurine', 'Company', 3), ('sa', 'Company', 1), ('participate', '', 2), ('in', '', 2)]
Entities Test [('eugênio sales', 'Person')]
Tokens Test [('what', '', 2), ('gender', '', 2), ('does', '', 2), ('eugênio', 'Person', 3), ('sales', 'Person', 1), ('identify', '', 2), ('as', '', 2)]
Entities Test [('appalachian mountains', 'Place')]
Tokens Test [('what', '', 2), ('is', '', 2), ('a', '', 2), ('mountain', '', 2), ('in', '', 2), ('the', '', 2), ('appalachian', 'Place', 3), ('mountains', 'Place', 1)]
Entities Test [('starter wife', 'Place')]
Tokens Test [('what', '', 2), ('television', '', 2), ('genre', '', 2), ('is', '', 2), ('the', '', 2), ('starter', 'Place', 3), ('wife', 'Place', 1)]
Entities Test [('san juan national forest', 'Place')]
Tokens Test [('what', '', 2), ('type', '', 2), ('of', '', 2), ('reserve', '', 2), ('is', '', 2), ('the', '', 2), ('san', 'Place', 3), ('juan', 'Place', 1), ('national', 'Place', 1), ('forest', 'Place', 1)]
Entities Test [('joseph meyer', 'Person')]
Tokens Test [('what', '', 2), ('is', '', 2), ('joseph', 'Person', 3), ('meyer', 'Person', 1), ("'s", '', 2), ('job', '', 2)]
Entities Test [('hungary', 'Place')]
Tokens Test [('what', '', 2), ('s', '', 2), ('a', '', 2), ('city', '', 2), ('in', '', 2), ('hungary', 'Place', 3)]
Entities Test [('mike twellman', 'Person')]
Tokens Test [('what', '', 2), ('is', '', 2), ('the', '', 2), ('position', '', 2), ('that', '', 2), ('mike', 'Person', 3), ('twellman', 'Person', 1), ('plays', '', 2)]
Entities Test [('salempur', 'Place')]
Tokens Test [('what', '', 2), ('district', '', 2), ('is', '', 2), ('salempur', 'Place', 3), ('uttar', '', 2), ('pradesh', '', 2), ('in', '', 2)]
Entities Test [('get damned', 'Album')]
Tokens Test [('what', '', 2), ('genre', '', 2), ('of', '', 2), ('music', '', 2), ('is', '', 2), ('on', '', 2), ('the', '', 2), ('album', '', 2), ('get', 'Album', 3), ('damned', 'Album', 1)]
Entities Test [('golden age an', 'Automobile')]
Tokens Test [('is', '', 2), ('the', '', 2), ('golden', 'Automobile', 3), ('age', 'Automobile', 1), ('an', 'Automobile', 1), ('album', '', 2), ('or', '', 2), ('dvd', '', 2)]
Entities Test [('warner bros', 'Company')]
Tokens Test [('what', '', 2), ('movie', '', 2), ('is', '', 2), ('produced', '', 2), ('by', '', 2), ('warner', 'Company', 3), ('bros', 'Company', 1)]
Entities Test [('rudi ball', 'Person')]
Tokens Test [('where', '', 2), ('in', '', 2), ('germany', '', 2), ('was', '', 2), ('rudi', 'Person', 3), ('ball', 'Person', 1), ('born', '', 2), ('in', '', 2)]
Entities Test []
Tokens Test [('what', '', 2), ('time', '', 2), ('zone', '', 2), ('is', '', 2), ('marrakech', '', 2), ('in', '', 2)]
Entities Test [('estella warren', 'Person')]
Tokens Test [('what', '', 2), ('is', '', 2), ('the', '', 2), ('nationality', '', 2), ('of', '', 2), ('estella', 'Person', 3), ('warren', 'Person', 1)]
Entities Test [('tomadino language', 'Language')]
Tokens Test [('what', '', 2), ('country', '', 2), ('utilizes', '', 2), ('the', '', 2), ('tomadino', 'Language', 3), ('language', 'Language', 1)]
Entities Test [('imam mustafayev', 'Person')]
Tokens Test [('what', '', 2), ('is', '', 2), ('imam', 'Person', 3), ('mustafayev', 'Person', 1), ("'s", '', 2), ('gender', '', 2)]
Entities Test [('john berry', 'Person')]
Tokens Test [('which', '', 2), ('country', '', 2), ('is', '', 2), ('john', 'Person', 3), ('berry', 'Person', 1), ('from', '', 2)]
Entities Test [('bodish languages', 'Language')]
Tokens Test [('what', '', 2), ('language', '', 2), ('comes', '', 2), ('from', '', 2), ('bodish', 'Language', 3), ('languages', 'Language', 1)]
Entities Test [('jean genet', 'Person')]
Tokens Test [('who', '', 2), ('did', '', 2), ('jean', 'Person', 3), ('genet', 'Person', 1), ('influence', '', 2)]
Entities Test [('harry blackstone', 'GEN'), ('come from', 'Person')]
Tokens Test [('which', '', 2), ('country', '', 2), ('does', '', 2), ('harry', 'GEN', 3), ('blackstone', 'GEN', 1), ('jr', '', 2), ('come', 'Person', 3), ('from', 'Person', 1)]
Entities Test [('brandon reilly', 'GEN')]
Tokens Test [('what', '', 2), ('musical', '', 2), ('genre', '', 2), ('does', '', 2), ('brandon', 'GEN', 3), ('reilly', 'GEN', 1), ('create', '', 2)]
Entities Test [('great patriotic war', 'Automobile')]
Tokens Test [('which', '', 2), ('red', '', 2), ('army', '', 2), ('general', '', 2), ('was', '', 2), ('involved', '', 2), ('in', '', 2), ('the', '', 2), ('great', 'Automobile', 3), ('patriotic', 'Automobile', 1), ('war', 'Automobile', 1)]
Entities Test [('gangs of new york', 'Film')]
Tokens Test [('who', '', 2), ('wrote', '', 2), ('the', '', 2), ('music', '', 2), ('for', '', 2), ('gangs', 'Film', 3), ('of', 'Film', 1), ('new', 'Film', 1), ('york', 'Film', 1)]
Entities Test [('home', 'Place')]
Tokens Test [('what', '', 2), ('kind', '', 2), ('of', '', 2), ('book', '', 2), ('is', '', 2), ('home', 'Place', 3)]
Entities Test [('ellen swallow richards', 'Person')]
Tokens Test [('what', '', 2), ('is', '', 2), ('ellen', 'Person', 3), ('swallow', 'Person', 1), ('richards', 'Person', 1), ("'s", '', 2), ('nationality', '', 2)]
Entities Test [('episode written', 'Person'), ('michelle ashford', 'Person')]
Tokens Test [('what', '', 2), ('is', '', 2), ('an', '', 2), ('episode', 'Person', 3), ('written', 'Person', 1), ('by', '', 2), ('michelle', 'Person', 3), ('ashford', 'Person', 1)]
Entities Test [('lorenzo maitani', 'Person')]
Tokens Test [('what', '', 2), ('is', '', 2), ('the', '', 2), ('nationality', '', 2), ('of', '', 2), ('lorenzo', 'Person', 3), ('maitani', 'Person', 1)]
Entities Test [('chicago', 'Place')]
Tokens Test [('name', '', 2), ('a', '', 2), ('person', '', 2), ('born', '', 2), ('in', '', 2), ('chicago', 'Place', 3)]
Entities Test [('fall heads roll', 'Album')]
Tokens Test [('what', '', 2), ('type', '', 2), ('of', '', 2), ('music', '', 2), ('fall', 'Album', 3), ('heads', 'Album', 1), ('roll', 'Album', 1)]
Entities Test [('sophie merry', 'Person')]
Tokens Test [('what', '', 2), ('is', '', 2), ('the', '', 2), ('gender', '', 2), ('of', '', 2), ('sophie', 'Person', 3), ('merry', 'Person', 1)]
Entities Test [('central european time', 'SportsEvent')]
Tokens Test [('what', '', 2), ("'s", '', 2), ('a', '', 2), ('place', '', 2), ('in', '', 2), ('central', 'SportsEvent', 3), ('european', 'SportsEvent', 1), ('time', 'SportsEvent', 1), ('zone', '', 2)]
Entities Test [('ryna', 'Agent')]
Tokens Test [('which', '', 2), ('city', '', 2), ('did', '', 2), ('the', '', 2), ('artist', '', 2), ('ryna', 'Agent', 3), ('originate', '', 2), ('in', '', 2)]
Entities Test [('generation kill', 'Person')]
Tokens Test [('what', '', 2), ('type', '', 2), ('of', '', 2), ('film', '', 2), ('is', '', 2), ('generation', 'Person', 3), ('kill', 'Person', 1)]
Entities Test [('hyundai santa fe', 'Automobile')]
Tokens Test [('in', '', 2), ('what', '', 2), ('automotive', '', 2), ('class', '', 2), ('is', '', 2), ('the', '', 2), ('hyundai', 'Automobile', 3), ('santa', 'Automobile', 1), ('fe', 'Automobile', 1)]
Entities Test [('action film', 'MusicGenre')]
Tokens Test [('name', '', 2), ('a', '', 2), ('japanese', '', 2), ('action', 'MusicGenre', 3), ('film', 'MusicGenre', 1)]
Entities Test [('moderat', 'Agent')]
Tokens Test [('what', '', 2), ('is', '', 2), ('moderat', 'Agent', 3), ("'s", '', 2), ('origin', '', 2)]
Entities Test [('detroit', 'Place')]
Tokens Test [('who', '', 2), ('is', '', 2), ('a', '', 2), ('musician', '', 2), ('born', '', 2), ('in', '', 2), ('detroit', 'Place', 3)]
Entities Test [('louis n', 'Person')]
Tokens Test [('what', '', 2), ('film', '', 2), ('story', '', 2), ('credits', '', 2), ('did', '', 2), ('louis', 'Person', 3), ('n', 'Person', 1), ('parker', '', 2), ('contribute', '', 2), ('to', '', 2)]
Entities Test [('endless love', 'Language')]
Tokens Test [('who', '', 2), ('was', '', 2), ('the', '', 2), ('cinematographer', '', 2), ('for', '', 2), ('the', '', 2), ('film', '', 2), ('endless', 'Language', 3), ('love', 'Language', 1)]
Entities Test [('private university', 'University')]
Tokens Test [('what', '', 2), ('is', '', 2), ('an', '', 2), ('example', '', 2), ('of', '', 2), ('a', '', 2), ('private', 'University', 3), ('university', 'University', 1)]
Entities Test [('italy', 'Person')]
Tokens Test [('name', '', 2), ('a', '', 2), ('location', '', 2), ('in', '', 2), ('italy', 'Person', 3)]
Entities Test [('laura ingalls wilder', 'Person')]
Tokens Test [('what', '', 2), ('is', '', 2), ('a', '', 2), ('book', '', 2), ('by', '', 2), ('laura', 'Person', 3), ('ingalls', 'Person', 1), ('wilder', 'Person', 1)]
Entities Test [('jane austen', 'Person')]
Tokens Test [('what', '', 2), ('did', '', 2), ('jane', 'Person', 3), ('austen', 'Person', 1), ('write', '', 2)]
Entities Test [('vitas', 'Person')]
Tokens Test [('where', '', 2), ('is', '', 2), ('the', '', 2), ('artist', '', 2), ('vitas', 'Person', 3), ('from', '', 2)]
Entities Test [('destroy the machines', 'Album')]
Tokens Test [('in', '', 2), ('what', '', 2), ('format', '', 2), ('was', '', 2), ('destroy', 'Album', 3), ('the', 'Album', 1), ('machines', 'Album', 1), ('released', '', 2)]
Entities Test [('james g', 'Person')]
Tokens Test [('what', '', 2), ('is', '', 2), ('james', 'Person', 3), ('g', 'Person', 1), ('blaine', '', 2), ('most', '', 2), ('known', '', 2), ('for', '', 2)]
Entities Test [('the dog island', 'Software')]
Tokens Test [('what', '', 2), ('kind', '', 2), ('of', '', 2), ('video', '', 2), ('game', '', 2), ('is', '', 2), ('the', 'Software', 3), ('dog', 'Software', 1), ('island', 'Software', 1)]
Entities Test []
Tokens Test [('what', '', 2), ('tracks', '', 2), ('are', '', 2), ('by', '', 2), ('slinkeeminx', '', 2)]
Entities Test [('don', 'Place')]
Tokens Test [('what', '', 2), ('is', '', 2), ('don', 'Place', 3), ('graham', '', 2), ('known', '', 2), ('as', '', 2)]
Entities Test [('voice actor', 'Person')]
Tokens Test [('who', '', 2), ('was', '', 2), ('a', '', 2), ('voice', 'Person', 3), ('actor', 'Person', 1)]
Entities Test [('liliana cavani', 'Person')]
Tokens Test [('what', '', 2), ('movie', '', 2), ('did', '', 2), ('liliana', 'Person', 3), ('cavani', 'Person', 1), ('direct', '', 2)]
Entities Test [('cheney tech', 'Automobile')]
Tokens Test [('which', '', 2), ('country', '', 2), ('is', '', 2), ('cheney', 'Automobile', 3), ('tech', 'Automobile', 1), ('in', '', 2)]
Entities Test [('nepal', 'Place')]
Tokens Test [('name', '', 2), ('a', '', 2), ('city', '', 2), ('in', '', 2), ('nepal', 'Place', 3)]
Entities Test [('chicago', 'Place')]
Tokens Test [('what', '', 2), ('s', '', 2), ('the', '', 2), ('name', '', 2), ('of', '', 2), ('a', '', 2), ('battle', '', 2), ('that', '', 2), ('happened', '', 2), ('in', '', 2), ('chicago', 'Place', 3)]
Entities Test [('communist party of britain', 'Agent')]
Tokens Test [('which', '', 2), ('is', '', 2), ('the', '', 2), ('main', '', 2), ('ideology', '', 2), ('of', '', 2), ('the', '', 2), ('communist', 'Agent', 3), ('party', 'Agent', 1), ('of', 'Agent', 1), ('britain', 'Agent', 1)]
Entities Test []
Tokens Test [('what', '', 2), ('s', '', 2), ('the', '', 2), ('name', '', 2), ('of', '', 2), ('a', '', 2), ('heavy', '', 2), ('metal', '', 2), ('artist', '', 2)]
Entities Test [('webbie', 'Person')]
Tokens Test [('which', '', 2), ('recording', '', 2), ('label', '', 2), ('is', '', 2), ('webbie', 'Person', 3), ('with', '', 2)]
Entities Test [('thunderbolt and lightfoot', 'Film')]
Tokens Test [('who', '', 2), ('wrote', '', 2), ('the', '', 2), ('film', '', 2), ('thunderbolt', 'Film', 3), ('and', 'Film', 1), ('lightfoot', 'Film', 1)]
Entities Test []
Tokens Test [('who', '', 2), ('is', '', 2), ('an', '', 2), ('artist', '', 2), ('known', '', 2), ('for', '', 2), ('alternative', '', 2), ('hip', '', 2), ('hop', '', 2)]
Entities Test [('england', 'MusicalArtist')]
Tokens Test [('what', '', 2), ('is', '', 2), ('a', '', 2), ('name', '', 2), ('of', '', 2), ('gay', '', 2), ('night', '', 2), ('club', '', 2), ('in', '', 2), ('england', 'MusicalArtist', 3)]
Entities Test [('robert roth', 'Person')]
Tokens Test [('what', '', 2), ('type', '', 2), ('of', '', 2), ('music', '', 2), ('is', '', 2), ('robert', 'Person', 3), ('roth', 'Person', 1), ('known', '', 2), ('for', '', 2)]
Entities Test [('folk music', 'Genre')]
Tokens Test [('what', '', 2), ('album', '', 2), ('has', '', 2), ('folk', 'Genre', 3), ('music', 'Genre', 1)]
Entities Test []
Tokens Test [('what', '', 2), ('kind', '', 2), ('of', '', 2), ('tv', '', 2), ('show', '', 2), ('is', '', 2), ('frontpage', '', 2)]
Entities Test [('serge gainsbourg', 'Person')]
Tokens Test [('name', '', 2), ('an', '', 2), ('album', '', 2), ('by', '', 2), ('serge', 'Person', 3), ('gainsbourg', 'Person', 1)]
Entities Test [('james hendry', 'Person')]
Tokens Test [('what', '', 2), ('is', '', 2), ('the', '', 2), ('gender', '', 2), ('of', '', 2), ('james', 'Person', 3), ('hendry', 'Person', 1)]
Entities Test [('darren dods', 'Person')]
Tokens Test [('what', '', 2), ('is', '', 2), ('darren', 'Person', 3), ('dods', 'Person', 1), ('known', '', 2), ('for', '', 2), ('doing', '', 2), ('for', '', 2), ('a', '', 2), ('profession', '', 2)]
